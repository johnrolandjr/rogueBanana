/***********************************************************************************************************************
 * This file was generated by the MCUXpresso Config Tools. Any manual edits made to this file
 * will be overwritten if the respective MCUXpresso Config Tools is used to update this file.
 **********************************************************************************************************************/

#ifndef _PERIPHERALS_H_
#define _PERIPHERALS_H_

/***********************************************************************************************************************
 * Included files
 **********************************************************************************************************************/
#include "fsl_edma.h"
#include "fsl_dmamux.h"
#include "fsl_common.h"
#include "fsl_clock.h"
#include "fsl_ftm.h"
#include "fsl_gpio.h"
#include "fsl_port.h"
#include "fsl_dspi.h"

#if defined(__cplusplus)
extern "C" {
#endif /* __cplusplus */

/***********************************************************************************************************************
 * Definitions
 **********************************************************************************************************************/
/* Definitions for BOARD_InitPeripherals functional group */
/* Used DMA device. */
#define EDMA_1_DMA_BASEADDR DMA0
/* Associated DMAMUX device that is used for muxing of requests. */
#define EDMA_1_DMAMUX_BASEADDR DMAMUX

  /* Channel dummy definitions */
/* eDMA_1 eDMA source request. */
#define EDMA_1_DUMMY_DMA_REQUEST kDmaRequestMux0Disable
/* Selected eDMA channel number. */
#define EDMA_1_DUMMY_DMA_CHANNEL 2
/* TCD pool size */
#define EDMA_1_DUMMY_TCD_SIZE 1
/* eDMA_1 interrupt vector ID (number). */
#define EDMA_1_DMA_CH_INT_DONE_2_IRQN DMA2_DMA18_IRQn
/* eDMA_1 interrupt handler identifier. */
#define EDMA_1_DMA_CH_INT_DONE_2_IRQHANDLER DMA2_DMA18_IRQHandler
/* Definition of peripheral ID */
#define WS28XX_BIT_TIME_PERIPHERAL FTM2
/* Definition of the clock source frequency */
#define WS28XX_BIT_TIME_CLOCK_SOURCE 60000000UL
/* WS28XX_BIT_TIME interrupt vector ID (number). */
#define WS28XX_BIT_TIME_IRQN FTM2_IRQn
/* WS28XX_BIT_TIME interrupt handler identifier. */
#define WS28XX_BIT_TIME_IRQHANDLER FTM2_IRQHandler
/* Alias for GPIOA peripheral */
#define GPIO_1_GPIO GPIOA
/* Alias for PORTA */
#define GPIO_1_PORT PORTA
/* GPIO_1 interrupt vector ID (number). */
#define GPIO_1_IRQN PORTA_IRQn
/* GPIO_1 interrupt handler identifier. */
#define GPIO_1_IRQHANDLER PORTA_IRQHandler
/* BOARD_InitPeripherals defines for SPI1 */
/* Definition of peripheral ID */
#define SPI_SDCARD_PERIPHERAL SPI1
/* Definition of the clock source */
#define SPI_SDCARD_CLOCK_SOURCE DSPI1_CLK_SRC
/* Definition of the clock source frequency */
#define SPI_SDCARD_CLK_FREQ CLOCK_GetFreq(SPI_SDCARD_CLOCK_SOURCE)
/* Definition of peripheral ID */
#define GEN_TIMER_10K_PERIPHERAL FTM0
/* Definition of the clock source frequency */
#define GEN_TIMER_10K_CLOCK_SOURCE CLOCK_GetFreq(kCLOCK_BusClk)
/* Gen_timer_10k interrupt vector ID (number). */
#define GEN_TIMER_10K_IRQN FTM0_IRQn
/* Gen_timer_10k interrupt handler identifier. */
#define GEN_TIMER_10K_IRQHANDLER FTM0_IRQHandler

/***********************************************************************************************************************
 * Global variables
 **********************************************************************************************************************/
extern const edma_config_t eDMA_1_config;
extern edma_handle_t eDMA_1_dummy_Handle;
extern const ftm_config_t WS28XX_BIT_TIME_config;
extern const dspi_master_config_t SPI_SDCARD_config;
extern const ftm_config_t Gen_timer_10k_config;

/***********************************************************************************************************************
 * Initialization functions
 **********************************************************************************************************************/
void BOARD_InitPeripherals(void);

/***********************************************************************************************************************
 * BOARD_InitBootPeripherals function
 **********************************************************************************************************************/
void BOARD_InitBootPeripherals(void);

#if defined(__cplusplus)
}
#endif

#endif /* _PERIPHERALS_H_ */
